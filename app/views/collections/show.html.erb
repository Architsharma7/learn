<div>
  <div class="max-w-7xl mx-auto">
    <nav class="sm:hidden">
      <a href="#" class="flex items-center text-sm leading-5 font-medium text-gray-500 hover:text-gray-700 transition duration-150 ease-in-out">
        <svg class="flex-shrink-0 -ml-1 mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"/>
        </svg>
        Back
      </a>
    </nav>
    <nav class="hidden sm:flex items-center text-sm leading-5 font-medium">
	  <%= link_to parent.nickname, parent, class: "text-gray-500 hover:text-gray-700 transition duration-150 ease-in-out" %>
      <svg class="flex-shrink-0 mx-2 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
      </svg>
      <%= link_to "collections", collection_url, class: "text-gray-500 hover:text-gray-700 transition duration-150 ease-in-out" %>
    </nav>
  </div>
  <div class="max-w-7xl mx-auto mt-2 md:flex md:items-center md:justify-between">
    <div class="flex-1 min-w-0">
      <h2 class="text-2xl font-bold leading-7 text-gray-900  sm:text-3xl sm:leading-9 sm:truncate">
        <%= resource.name %>
      </h2>
	  <p class="text-gray-400"><%= resource.description %></p>
    </div>
    <div class="mt-4 flex-shrink-0 flex md:mt-0 md:ml-4">
  
  
  <% if current_user == parent %>
  <% if false %>
  <span class="hidden sm:block ml-3 shadow-sm rounded-md">
  <%= link_to('Import List from GoodReads', import_goodreads_list_resource_path(@collection), method: :get, class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500  focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:text-gray-800 active:bg-gray-50 transition duration-150 ease-in-out") %>
  </span>
  <% end %>

      <span class="ml-3 shadow-sm rounded-md">
		<%= link_to 'Edit', edit_resource_path(@collection), class: "inline-flex items-center px-4 py-2 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:shadow-outline-indigo focus:border-indigo-700 active:bg-indigo-700 transition duration-150 ease-in-out" %>
      </span>
	<% end %>
    </div>
  </div>
</div>


      <div class="" id="app">
      <% if resource.items.size > 1 %>
        <div class="flex mx-auto my-6">
            <input type="search" v-model="searchQuery" name="searchQuery" id="searchQuery" class="max-w-7xl mx-auto rounded p-2 w-full bg-grey-light border-grey-light focus:bg-white border border-solid focus:border-indigo-light text-blue-darkest" placeholder="Search in this collection by name" />
        </div>
      <% end %>
        <div class="flex flex-wrap lg:flex-nowrap mx-auto text-indigo-darkest">
          <% if resource.items.size > 1 %>
            <div class="w-full lg:w-1/4 lg:mr-4">
                <div class="bg-white rounded-md p-4 border border-solid border-grey-light sticky top-0">
                    <details open>
                        <summary class="font-bold text-purple-dark pb-2 uppercase">Filter by Formats</summary>

                        <% resource.formats.each do |format| %>
                            <label class="mb-1 inline-flex px-2 rounded-full bg-indigo-100 text-indigo-700 items-center space-x-1">
                              <span class="text-gray-900 whitespace-nowrap"><%= format %></span>
                              <input type="checkbox" name="formatfacet" v-model="formatfacet" value="<%= format %>" class="form-tick appearance-none h-4 w-4 border border-gray-300 rounded-md checked:bg-indigo-600 checked:border-transparent focus:outline-none">
                            </label>
                        <% end %>
                    </details>
                    <% if resource.levels.any? %>
                    <details open>
                        <summary class="font-bold text-purple-dark pb-2 uppercase">Filter by Level</summary>

                        <% resource.levels.each do |level| %>
                            <label class="mb-1 inline-flex px-2 rounded-full bg-red-100 text-red-700 items-center space-x-1">
                              <span class="text-gray-900 whitespace-nowrap"><%= level %></span>
                              <input type="checkbox" name="levelfacet" v-model="levelfacet" value="<%= level %>" class="form-tick appearance-none h-4 w-4 border border-gray-300 rounded-md checked:bg-red-600 checked:border-transparent focus:outline-none">
                            </label>
                        <% end %>
                    </details>
                    <% end %>
                    <details open>
                        <summary class="font-bold text-purple-dark pb-2 uppercase">Filter by Topics</summary>

                        <% resource.topics.each do |topic| %>
                            <label class="mb-1 inline-flex px-2 rounded-full bg-green-100 text-green-700 items-center space-x-1">
                              <span class="text-gray-900 whitespace-nowrap"><%= topic %></span>
                              <input type="checkbox" name="topicfacet" v-model="topicfacet" value="<%= topic %>" class="form-tick appearance-none h-4 w-4 border border-gray-300 rounded-md checked:bg-green-600 checked:border-transparent focus:outline-none">
                            </label>
                        <% end %>
                    </details>
                </div>
            </div>
          
            <div class="xs:w-full lg:w-3/4">
                <p class="mb-2 text-right">{{filterItems.length}} items</p>
                <div class="mb-2">
                  <button v-for="format in formatfacet" type="button" v-on:click="removeFacet('format',format)" class="inline-flex items-center px-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full bg-indigo-100 text-indigo-700 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    {{format}}
                    <svg class="ml-2 -mr-0.5 h-3 w-3" stroke="currentColor" fill="none" viewBox="0 0 8 8">
                      <path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7" />
                    </svg>
                  </button>

                  <button v-for="level in levelfacet" type="button" v-on:click="removeFacet('level',level)" class="inline-flex items-center px-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full bg-red-100 text-red-700 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    {{level}}
                    <svg class="ml-2 -mr-0.5 h-3 w-3" stroke="currentColor" fill="none" viewBox="0 0 8 8">
                      <path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7" />
                    </svg>
                  </button>

                  <button v-for="topic in topicfacet" type="button" v-on:click="removeFacet('topic',topic)" class="inline-flex items-center px-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full bg-green-100 text-green-700 hover:bg-green-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    {{topic}}
                    <svg class="ml-2 -mr-0.5 h-3 w-3" stroke="currentColor" fill="none" viewBox="0 0 8 8">
                      <path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7" />
                    </svg>
                  </button>
                </div>
                <div v-if="filterItems.length == 0">
                    <h2 class=" text-indigo-darker pb-2 text-xl">Sorry</h2>
                    <p class="text-black">There seem to be no items under your criteria with query: {{searchQuery}}, formats: {{formatfacet}}, levels: {{levelfacet}}, topics: {{topicfacet}}</p>
                </div>
                <% end %>
                <div class="flex flex-wrap">
                  <a v-for="item in filterItems" :key="item.id" :href="item.path" class="block w-xs max-w-xs bg-white  shadow-lg rounded-lg overflow-hidden mr-4 mb-4 transition duration-200 transform hover:scale-105">
                      <div class="py-5 px-4">
                          <p class="block text-sm text-gray-400">{{item.format}} in {{item.topic_names}}</p>
                          <p class="block text-lg text-gray-800 font-semibold">{{item.display_name}}</p>
                          <span class="text-sm text-gray-700 ">{{item.top_domain}}</span>
                      </div>
                  </a>
                </div>
            </div>
        </div>
      </div>

      


      

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>

<script type="text/javascript">
let app = new Vue({
  el: '#app',
  data() {
      return{
          endpoint:      "<%= resource_url(resource, format: :json) %>",
          items: [],
          searchQuery: null,
          levelfacet: [],
          formatfacet: [],
          topicfacet: [],
      }
  },
  methods: {
      fetchitems() {
          fetch(this.endpoint)
              .then(blob => blob.json())
              .then(data => this.items.push(...data.items));
      },

      removeFacet(type,name){
        if(type == 'format') this.formatfacet.splice(this.formatfacet.indexOf(name),1);
        if(type == 'topic') this.topicfacet.splice(this.topicfacet.indexOf(name),1);
        if(type == 'level') this.levelfacet.splice(this.levelfacet.indexOf(name),1)
      }
  },
  computed: {
      filterItems(){
          const myRegex = new RegExp(this.searchQuery, 'gi')
          return this.items.filter(result => {
            return !this.searchQuery || result.name.match(myRegex);
          }).filter(result => {
            return this.topicfacet.length == 0 || result.topics.filter(x => this.topicfacet.includes(x.name)).length > 0;
          }).filter(result => {
            return this.levelfacet.length == 0 || this.levelfacet.includes(result.level);
          }).filter(result => {
            return this.formatfacet.length == 0 || this.formatfacet.includes(result.format);
          })
      }
  },
  mounted(){
      this.fetchitems();
  }
});
</script>
